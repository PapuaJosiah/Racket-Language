;;
;; FILE:     homework06.rkt
;; AUTHOR:   YOUR NAME
;; DATE:     YOUR DATE
;; COMMENT:  This module defines the five functions specified in
;;           Homework 6 as an importable module.  Use the function
;;           stub if you do not have a working solution of your own.
;;
;; MODIFIED: 
;; CHANGE:   
;;

#lang racket
(require "syntax-procs.rkt")
(require "occurs-procs.rkt")
(provide list-index tree-sum tree? unused-var?)

;; --------------------------------------------------------------------------
;; Problem 1                                           (structural recursion)
;; --------------------------------------------------------------------------

(define list-index
  (lambda (s los)
    -1))          ; only a default value...

;; --------------------------------------------------------------------------
;; Problem 2                                           (structural recursion)
;; --------------------------------------------------------------------------

(define tree-sum
  (lambda (bin-tree)
    -1))          ; only a default value...

;; --------------------------------------------------------------------------
;; Problem 3                                           (structural recursion)
;; --------------------------------------------------------------------------

(define tree?
  (lambda (exp)
    #f))          ; only a default value...

;; --------------------------------------------------------------------------
;; Problem 4                                                (little language)
;; --------------------------------------------------------------------------

(define unused-var?
  (lambda (v exp)
    #t))          ; only a default value...

;; --------------------------------------------------------------------------

